
[project]
name = "spellcheck-microservice"
version = "4.0.0"
description = "Microservice for spellchecking"
authors = [{ name = "Denis Anikin", email = "ad@xfenix.ru" }]
license = { text = "MIT" }
requires-python = ">=3.10"
dependencies = [
    "granian",
    "pyenchant",
    "toml",
    "cachebox",
    "anyio>=4",
    "sentry-sdk",
    "pydantic-settings",
    "fastapi",
    "structlog",
    "urlextract",
]

[dependency-groups]
dev = [
    "httpx",
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "mypy",
    "requests",
    "types-requests",
    "Faker",
    "vulture",
    "types-toml",
    "pytest-repeat",
    "ruff",
]

[tool.ruff]
fix = true
unsafe-fixes = true
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = ["D1", "D203", "D213", "FA102", "COM812", "ISC001"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.isort]
no-lines-before = ["standard-library", "local-folder"]
known-third-party = []
known-local-folder = ["whole_app"]
lines-after-imports = 2

[tool.ruff.lint.extend-per-file-ignores]
"tests/*.py" = [
    "ANN001",
    "ANN002",
    "ANN003",
    "ANN401",
    "S101",
    "PLR2004",
    "S311",
]
"tests/_fixtures.py" = ["E501"]

[tool.mypy]
plugins = "pydantic.mypy"
strict = true
ignore_missing_imports = true

[tool.vulture]
exclude = ["whole_app/settings.py"]

[tool.pytest.ini_options]
addopts = "--cov . --cov-report term-missing"

[tool.coverage.report]
exclude_also = [
    "if typing.TYPE_CHECKING",
]

[tool.coverage.run]
omit = ["scripts/*"]

[tool.hatch.build.targets.wheel]
packages = ["whole_app"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
